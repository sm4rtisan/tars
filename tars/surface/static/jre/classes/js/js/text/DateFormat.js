$import("js.text.Format","BootstrapClassLoader"),Class.forName({name:"abstract class js.text.DateFormat extends js.text.Format","@Gatter @Setter protected calendar":null,"public final static int ERA_FIELD":0,"public final static int YEAR_FIELD":1,"public final static int MONTH_FIELD":2,"public final static int DATE_FIELD":3,"public final static int HOUR_OF_DAY1_FIELD":4,"public final static int HOUR_OF_DAY0_FIELD":5,"public final static int MINUTE_FIELD":6,"public final static int SECOND_FIELD":7,"public final static int MILLISECOND_FIELD":8,"public final static int DAY_OF_WEEK_FIELD":9,"public final static int DAY_OF_YEAR_FIELD":10,"public final static int DAY_OF_WEEK_IN_MONTH_FIELD":11,"public final static int WEEK_OF_YEAR_FIELD":12,"public final static int WEEK_OF_MONTH_FIELD":13,"public final static int AM_PM_FIELD":14,"public final static int HOUR1_FIELD":15,"public final static int HOUR0_FIELD":16,"public final static int TIMEZONE_FIELD":17,DateFormat:function(){},"final format":function(t){if(Object.isDate(t))return this.formatDate(t).toString();if(Object.isNumber(t))return this.formatDate(new Date(t)).toString();throw new js.lang.IllegalArgumentException("Cannot format given Object as a Date")},"abstract formatDate":function(t){},"abstract parse":function(t){}});